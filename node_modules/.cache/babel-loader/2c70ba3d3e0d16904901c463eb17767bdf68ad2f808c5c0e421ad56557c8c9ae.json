{"ast":null,"code":"import React,{useState}from'react';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PerformanceChart=()=>{// Define months for X axis\nconst months=['Jan-23','Feb-23','Mar-23','Apr-23','May-23','Jun-23','Jul-23','Aug-23','Sep-23','Oct-23','Nov-23','Dec-23','Jan-24','Feb-24','Mar-24','Apr-24','May-24','Jun-24','Jul-24','Aug-24','Sep-24','Oct-24','Nov-24','Dec-24','Jan-25','Feb-25'];// Strategies data\nconst strategiesData={\"Bengal Fox\":[74.1,75.09,73.64,67.28,66.29,67.64,65.52,69.71,67.14,81.5,88.41,96.76,90.78,124.23,131.77,122.19,123.29,124.81,121.23,111.19,113.73,123.37,157.75,156.3,152.54,151.54],\"Isatis Fox\":[100,102.34,87.61,90.44,87.91,84.65,81.75,88.2,87.29,87.41,96.14,104.04,92.99,125.95,123.04,119.79,123.26,114.09,112.68,112.68,110.28,93.91,119.94,102.02,104.31,117.71],\"Fennec Fox\":[81.78,79.09,72.8,71.19,66.76,82.61,80.57,81.9,82.5,85.45,86.8,96.27,90.86,113.63,171.64,141.83,133.47,134.29,126.02,117.83,114.28,101.24,110.48,97.57,101.06,101.71],\"Gray Fox\":[100,100,100,100,100,100,100,100,100,100,100,100,96.1,124.08,134.63,120.01,133.97,135.08,154.83,142.44,157.48,176.67,226.26,218.27,226.5,184.17],\"Red Fox\":[100,100,100,100,100,100,100,100,100,100,100,100,100,102.45,100.97,89,105.84,94.35,117.6,93.92,93.92,94.48,122.68,112.18,109.51,95.2],\"Goupil Fox\":[100,100,100,100,100,100,100,100,100,100,100,100,100,100,133.28,130.33,135.17,123.13,147.85,139.2,155.75,161.59,180.01,191.93,185.54,168.17],\"Cross Fox\":[125.81,126.64,151.42,155.59,149.08,165.29,158,148.39,153.71,186.58,200.07,211.98,214.71,279.77,303.3,270.36,286.37,270.5,343.76,332.82,367.97,420.59,539.78,522.51,549.94,522.06],\"Tibetan Fox\":[122.06,119.59,134.01,139.62,139.56,136.86,134.2,124.57,126.75,136.06,147.29,154.62,157.88,206.78,207.61,182.99,210.89,184.85,235.01,227.16,241.48,263.35,343.33,313.33,280.24,255.13],\"Bat-eared Fox\":[118.65,109.56,118.13,120.68,117.02,89.36,87.55,80.11,80.54,85.06,81.62,101.73,100.08,125.45,162.54,158.94,159.29,136.15,181.2,183.43,205.24,216.73,244.11,260.02,247.54,250.16],\"Cape Fox\":[125.81,127.5,148.63,148.63,141.13,156.17,149.94,140.17,144.59,175.52,190.39,208.38,209.42,302.22,349.03,297.69,332.79,307.36,317.57,290.48,313.31,348.78,445.98,451.65,499.11,414.86],\"Island Fox\":[125.81,100.66,120.36,123.67,118.5,131.38,125.59,117.95,122.17,148.31,159.03,168.49,170.66,222.38,241.08,214.9,227.62,195.91,203.18,196.72,217.49,248.59,319.05,308.84,325.05,308.57],\"Cozumel Fox\":[122.06,97.98,109.79,114.39,114.34,112.12,108.71,100.91,102.67,110.22,119.31,125.26,127.9,167.51,168.18,148.23,170.84,151.53,141.24,136.53,145.13,158.28,206.35,188.31,168.43,153.33],\"Silver Fox\":[118.65,92.34,99.56,101.71,98.63,75.31,73.79,67.52,67.88,71.69,68.79,85.74,84.35,105.73,136.99,133.96,134.26,109.86,108.06,109.39,122.4,129.25,145.57,155.07,147.62,149.19]};// Prepare data for chart\nconst chartData=months.map((month,index)=>{const dataPoint={month};Object.keys(strategiesData).forEach(strategy=>{if(index<strategiesData[strategy].length){dataPoint[strategy]=strategiesData[strategy][index];}});return dataPoint;});// Colors for the lines\nconst colors=['#4285F4','#EA4335','#FBBC05','#34A853',// Google colors\n'#FF6384','#36A2EB','#FFCE56','#4BC0C0',// Chart.js colors\n'#8884d8','#82ca9d','#ffc658','#ff8042','#a4de6c','#d0ed57',// More colors\n'#C71585','#7B68EE','#3CB371','#FF7F50','#6495ED'// Additional colors\n];// State for filtering strategies\nconst[selectedCategory,setSelectedCategory]=useState('all');const[showTopPerformers,setShowTopPerformers]=useState(false);// Strategy groups\nconst categories={'all':'All Strategies','prophet':'Prophet','arima':'ARIMA/SARIMAX','hourly':'Hourly','daily':'Daily','weekly':'Weekly'};// Function to filter strategies\nconst getFilteredStrategies=()=>{let filtered=Object.keys(strategiesData);// Filter by category\nif(selectedCategory==='prophet'){filtered=filtered.filter(name=>name.includes(\"Fox\")&&!name.includes(\"ARIMA\"));}else if(selectedCategory==='arima'){filtered=filtered.filter(name=>name.includes(\"Fox\")&&name.includes(\"Fox\"));}else if(selectedCategory==='hourly'){filtered=filtered.filter(name=>name.includes(\"Hourly\"));}else if(selectedCategory==='daily'){filtered=filtered.filter(name=>name.includes(\"Daily\"));}else if(selectedCategory==='weekly'){filtered=filtered.filter(name=>name.includes(\"Weekly\"));}// Limit to top performers\nif(showTopPerformers){// Calculate last value for each strategy\nconst performances=filtered.map(strategy=>({name:strategy,lastValue:strategiesData[strategy][strategiesData[strategy].length-1]}));// Sort by performance and take top 5\nperformances.sort((a,b)=>b.lastValue-a.lastValue);filtered=performances.slice(0,5).map(item=>item.name);}return filtered;};// Filtered strategies\nconst filteredStrategies=getFilteredStrategies();return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full p-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold mb-4 text-center\",children:\"Strategy Performance (2023-2025)\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap justify-center gap-4 mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"mr-2 font-medium\",children:\"Category:\"}),/*#__PURE__*/_jsx(\"select\",{className:\"p-2 border rounded\",value:selectedCategory,onChange:e=>setSelectedCategory(e.target.value),children:Object.entries(categories).map(_ref=>{let[key,label]=_ref;return/*#__PURE__*/_jsx(\"option\",{value:key,children:label},key);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"topPerformers\",checked:showTopPerformers,onChange:()=>setShowTopPerformers(!showTopPerformers),className:\"mr-2\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"topPerformers\",children:\"Show only top 5 strategies\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"h-96\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(LineChart,{data:chartData,margin:{top:5,right:30,left:20,bottom:25},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"month\",tick:{fontSize:10},angle:-45,height:60,interval:1,textAnchor:\"end\"}),/*#__PURE__*/_jsx(YAxis,{domain:['auto','auto'],label:{value:'NAV',angle:-90,position:'insideLeft'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[`${value.toFixed(2)}`,'NAV']}),/*#__PURE__*/_jsx(Legend,{}),filteredStrategies.map((strategy,index)=>/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:strategy,name:strategy,stroke:colors[index%colors.length],strokeWidth:2,dot:{r:2},activeDot:{r:6}},strategy))]})})}),filteredStrategies.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold mb-2\",children:\"Final Performance (February 2025)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full bg-white border\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"p-2 border\",children:\"Strategy\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 border\",children:\"Initial Value\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 border\",children:\"Final Value\"}),/*#__PURE__*/_jsx(\"th\",{className:\"p-2 border\",children:\"Total Performance\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredStrategies.map(strategy=>{const initialValue=100;const finalValue=strategiesData[strategy][strategiesData[strategy].length-1];const performance=(finalValue-initialValue)/initialValue*100;return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{className:\"p-2 border\",children:strategy}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 border text-right\",children:initialValue}),/*#__PURE__*/_jsx(\"td\",{className:\"p-2 border text-right\",children:finalValue.toFixed(2)}),/*#__PURE__*/_jsxs(\"td\",{className:\"p-2 border text-right\",style:{color:performance>=0?'green':'red',fontWeight:'bold'},children:[performance.toFixed(2),\"%\"]})]},strategy);})})]})})]})]});};export default PerformanceChart;","map":{"version":3,"names":["React","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsx","_jsx","jsxs","_jsxs","PerformanceChart","months","strategiesData","chartData","map","month","index","dataPoint","Object","keys","forEach","strategy","length","colors","selectedCategory","setSelectedCategory","showTopPerformers","setShowTopPerformers","categories","getFilteredStrategies","filtered","filter","name","includes","performances","lastValue","sort","a","b","slice","item","filteredStrategies","className","children","value","onChange","e","target","entries","_ref","key","label","type","id","checked","htmlFor","width","height","data","margin","top","right","left","bottom","strokeDasharray","dataKey","tick","fontSize","angle","interval","textAnchor","domain","position","formatter","toFixed","stroke","strokeWidth","dot","r","activeDot","initialValue","finalValue","performance","style","color","fontWeight"],"sources":["C:/Users/Rodolphe Vidal/Documents/GitHub/tsx-perf/src/components/PerformanceChart.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst PerformanceChart = () => {\r\n  // Define months for X axis\r\n  const months = [\r\n    'Jan-23', 'Feb-23', 'Mar-23', 'Apr-23', 'May-23', 'Jun-23', \r\n    'Jul-23', 'Aug-23', 'Sep-23', 'Oct-23', 'Nov-23', 'Dec-23',\r\n    'Jan-24', 'Feb-24', 'Mar-24', 'Apr-24', 'May-24', 'Jun-24', \r\n    'Jul-24', 'Aug-24', 'Sep-24', 'Oct-24', 'Nov-24', 'Dec-24',\r\n    'Jan-25', 'Feb-25'\r\n  ];\r\n\r\n  // Strategies data\r\n  const strategiesData = {\r\n    \"Bengal Fox\": [74.1, 75.09, 73.64, 67.28, 66.29, 67.64, 65.52, 69.71, 67.14, 81.5, 88.41, 96.76, 90.78, 124.23, 131.77, 122.19, 123.29, 124.81, 121.23, 111.19, 113.73, 123.37, 157.75, 156.3, 152.54, 151.54],\r\n    \"Isatis Fox\": [100, 102.34, 87.61, 90.44, 87.91, 84.65, 81.75, 88.2, 87.29, 87.41, 96.14, 104.04, 92.99, 125.95, 123.04, 119.79, 123.26, 114.09, 112.68, 112.68, 110.28, 93.91, 119.94, 102.02, 104.31, 117.71],\r\n    \"Fennec Fox\": [81.78, 79.09, 72.8, 71.19, 66.76, 82.61, 80.57, 81.9, 82.5, 85.45, 86.8, 96.27, 90.86, 113.63, 171.64, 141.83, 133.47, 134.29, 126.02, 117.83, 114.28, 101.24, 110.48, 97.57, 101.06, 101.71],\r\n    \"Gray Fox\": [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 96.1, 124.08, 134.63, 120.01, 133.97, 135.08, 154.83, 142.44, 157.48, 176.67, 226.26, 218.27, 226.5, 184.17],\r\n    \"Red Fox\": [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 102.45, 100.97, 89, 105.84, 94.35, 117.6, 93.92, 93.92, 94.48, 122.68, 112.18, 109.51, 95.2],\r\n    \"Goupil Fox\": [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 133.28, 130.33, 135.17, 123.13, 147.85, 139.2, 155.75, 161.59, 180.01, 191.93, 185.54, 168.17],\r\n    \"Cross Fox\": [125.81, 126.64, 151.42, 155.59, 149.08, 165.29, 158, 148.39, 153.71, 186.58, 200.07, 211.98, 214.71, 279.77, 303.3, 270.36, 286.37, 270.5, 343.76, 332.82, 367.97, 420.59, 539.78, 522.51, 549.94, 522.06],\r\n    \"Tibetan Fox\": [122.06, 119.59, 134.01, 139.62, 139.56, 136.86, 134.2, 124.57, 126.75, 136.06, 147.29, 154.62, 157.88, 206.78, 207.61, 182.99, 210.89, 184.85, 235.01, 227.16, 241.48, 263.35, 343.33, 313.33, 280.24, 255.13],\r\n    \"Bat-eared Fox\": [118.65, 109.56, 118.13, 120.68, 117.02, 89.36, 87.55, 80.11, 80.54, 85.06, 81.62, 101.73, 100.08, 125.45, 162.54, 158.94, 159.29, 136.15, 181.2, 183.43, 205.24, 216.73, 244.11, 260.02, 247.54, 250.16],\r\n    \"Cape Fox\": [125.81, 127.5, 148.63, 148.63, 141.13, 156.17, 149.94, 140.17, 144.59, 175.52, 190.39, 208.38, 209.42, 302.22, 349.03, 297.69, 332.79, 307.36, 317.57, 290.48, 313.31, 348.78, 445.98, 451.65, 499.11, 414.86],\r\n    \"Island Fox\": [125.81, 100.66, 120.36, 123.67, 118.5, 131.38, 125.59, 117.95, 122.17, 148.31, 159.03, 168.49, 170.66, 222.38, 241.08, 214.9, 227.62, 195.91, 203.18, 196.72, 217.49, 248.59, 319.05, 308.84, 325.05, 308.57],\r\n    \"Cozumel Fox\": [122.06, 97.98, 109.79, 114.39, 114.34, 112.12, 108.71, 100.91, 102.67, 110.22, 119.31, 125.26, 127.9, 167.51, 168.18, 148.23, 170.84, 151.53, 141.24, 136.53, 145.13, 158.28, 206.35, 188.31, 168.43, 153.33],\r\n    \"Silver Fox\": [118.65, 92.34, 99.56, 101.71, 98.63, 75.31, 73.79, 67.52, 67.88, 71.69, 68.79, 85.74, 84.35, 105.73, 136.99, 133.96, 134.26, 109.86, 108.06, 109.39, 122.4, 129.25, 145.57, 155.07, 147.62, 149.19]\r\n  };\r\n\r\n  // Prepare data for chart\r\n  const chartData = months.map((month, index) => {\r\n    const dataPoint = { month };\r\n    Object.keys(strategiesData).forEach(strategy => {\r\n      if (index < strategiesData[strategy].length) {\r\n        dataPoint[strategy] = strategiesData[strategy][index];\r\n      }\r\n    });\r\n    return dataPoint;\r\n  });\r\n\r\n  // Colors for the lines\r\n  const colors = [\r\n    '#4285F4', '#EA4335', '#FBBC05', '#34A853', // Google colors\r\n    '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', // Chart.js colors\r\n    '#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#a4de6c', '#d0ed57', // More colors\r\n    '#C71585', '#7B68EE', '#3CB371', '#FF7F50', '#6495ED' // Additional colors\r\n  ];\r\n\r\n  // State for filtering strategies\r\n  const [selectedCategory, setSelectedCategory] = useState('all');\r\n  const [showTopPerformers, setShowTopPerformers] = useState(false);\r\n\r\n  // Strategy groups\r\n  const categories = {\r\n    'all': 'All Strategies',\r\n    'prophet': 'Prophet',\r\n    'arima': 'ARIMA/SARIMAX',\r\n    'hourly': 'Hourly',\r\n    'daily': 'Daily',\r\n    'weekly': 'Weekly'\r\n  };\r\n\r\n  // Function to filter strategies\r\n  const getFilteredStrategies = () => {\r\n    let filtered = Object.keys(strategiesData);\r\n    \r\n    // Filter by category\r\n    if (selectedCategory === 'prophet') {\r\n      filtered = filtered.filter(name => name.includes(\"Fox\") && !name.includes(\"ARIMA\"));\r\n    } else if (selectedCategory === 'arima') {\r\n      filtered = filtered.filter(name => name.includes(\"Fox\") && name.includes(\"Fox\"));\r\n    } else if (selectedCategory === 'hourly') {\r\n      filtered = filtered.filter(name => name.includes(\"Hourly\"));\r\n    } else if (selectedCategory === 'daily') {\r\n      filtered = filtered.filter(name => name.includes(\"Daily\"));\r\n    } else if (selectedCategory === 'weekly') {\r\n      filtered = filtered.filter(name => name.includes(\"Weekly\"));\r\n    }\r\n    \r\n    // Limit to top performers\r\n    if (showTopPerformers) {\r\n      // Calculate last value for each strategy\r\n      const performances = filtered.map(strategy => ({\r\n        name: strategy,\r\n        lastValue: strategiesData[strategy][strategiesData[strategy].length - 1]\r\n      }));\r\n      \r\n      // Sort by performance and take top 5\r\n      performances.sort((a, b) => b.lastValue - a.lastValue);\r\n      filtered = performances.slice(0, 5).map(item => item.name);\r\n    }\r\n    \r\n    return filtered;\r\n  };\r\n\r\n  // Filtered strategies\r\n  const filteredStrategies = getFilteredStrategies();\r\n\r\n  return (\r\n    <div className=\"w-full p-4\">\r\n      <h2 className=\"text-xl font-bold mb-4 text-center\">Strategy Performance (2023-2025)</h2>\r\n      \r\n      {/* Filters */}\r\n      <div className=\"flex flex-wrap justify-center gap-4 mb-4\">\r\n        <div>\r\n          <label className=\"mr-2 font-medium\">Category:</label>\r\n          <select \r\n            className=\"p-2 border rounded\"\r\n            value={selectedCategory}\r\n            onChange={(e) => setSelectedCategory(e.target.value)}\r\n          >\r\n            {Object.entries(categories).map(([key, label]) => (\r\n              <option key={key} value={key}>{label}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id=\"topPerformers\"\r\n            checked={showTopPerformers}\r\n            onChange={() => setShowTopPerformers(!showTopPerformers)}\r\n            className=\"mr-2\"\r\n          />\r\n          <label htmlFor=\"topPerformers\">Show only top 5 strategies</label>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* Chart */}\r\n      <div className=\"h-96\">\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart\r\n            data={chartData}\r\n            margin={{ top: 5, right: 30, left: 20, bottom: 25 }}\r\n          >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              dataKey=\"month\"\r\n              tick={{ fontSize: 10 }}\r\n              angle={-45}\r\n              height={60}\r\n              interval={1}\r\n              textAnchor=\"end\"\r\n            />\r\n            <YAxis\r\n              domain={['auto', 'auto']}\r\n              label={{ value: 'NAV', angle: -90, position: 'insideLeft' }}\r\n            />\r\n            <Tooltip formatter={(value) => [`${value.toFixed(2)}`, 'NAV']} />\r\n            <Legend />\r\n            {filteredStrategies.map((strategy, index) => (\r\n              <Line\r\n                key={strategy}\r\n                type=\"monotone\"\r\n                dataKey={strategy}\r\n                name={strategy}\r\n                stroke={colors[index % colors.length]}\r\n                strokeWidth={2}\r\n                dot={{ r: 2 }}\r\n                activeDot={{ r: 6 }}\r\n              />\r\n            ))}\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n      \r\n      {/* Performance table */}\r\n      {filteredStrategies.length > 0 && (\r\n        <div className=\"mt-8\">\r\n          <h3 className=\"text-lg font-bold mb-2\">Final Performance (February 2025)</h3>\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full bg-white border\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"p-2 border\">Strategy</th>\r\n                  <th className=\"p-2 border\">Initial Value</th>\r\n                  <th className=\"p-2 border\">Final Value</th>\r\n                  <th className=\"p-2 border\">Total Performance</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredStrategies.map((strategy) => {\r\n                  const initialValue = 100;\r\n                  const finalValue = strategiesData[strategy][strategiesData[strategy].length - 1];\r\n                  const performance = ((finalValue - initialValue) / initialValue) * 100;\r\n                  \r\n                  return (\r\n                    <tr key={strategy}>\r\n                      <td className=\"p-2 border\">{strategy}</td>\r\n                      <td className=\"p-2 border text-right\">{initialValue}</td>\r\n                      <td className=\"p-2 border text-right\">{finalValue.toFixed(2)}</td>\r\n                      <td className=\"p-2 border text-right\" style={{ \r\n                        color: performance >= 0 ? 'green' : 'red',\r\n                        fontWeight: 'bold'\r\n                      }}>\r\n                        {performance.toFixed(2)}%\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PerformanceChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}